**********************

* RDV du x/x/2020: *

**********************
            AVANT:
            ======
Raccourci clavier: Ctrl+ double click sur une méthode te renvoie sur le fichier correspondant!
substr()
            PENDANT:
            ========
.gitignore: mettre tous les fichiers qui ne sont pas commités (ex: .idea + cr)

Attention!! Ne pas commiter les models avec le mot de passe en clair!
Solution ->créer un fichier conf en local avec nos données personnelles et ne pas le commiter. à la place, mettre dans des variables (?!)

OUI! Faire des classes avec le controller:
et OUI! Il faut des modèles.

* utiliser Composer pour utiliser un autoloader (pour éviter les require)
* renommer les fichiers controllers (commentsController, postsControllers) et en faire des CLASSES (avec les classes mères-filles)
* rajouter un dossier App/ avec les controllers et models dedans

* fonction use() (c'est require() mais en mieux
(faire un use en debut de document)

*listPostView:
faire le htmlspecialchars uniquement AVANT la saisie dans la base, pas la peine de le faire à l'affichage.

*la page welcome.php est à suprimer (elle ne sert à rien)
* en dehors de mentions légales, il faut utiliser les controllers pour générer des vues.

VEILLE: popper.js

**Vider la table** utile ^pur vider les id auto incrémentés
ou pour trier, rajouter une "colonne" Date de Publication! Pas bête!
remplacer le substr() par ce truc: ->https://www.php.net/manual/fr/ref.mbstring.php

HORS SUJET: pareil mais pour les kanas: https://www.php.net/manual/fr/function.mb-convert-kana.php

Autre possibilité pour éviter les mots coupés -> faire un substr de 110 caractères, et strpos() pourquoi pas, qui permettrait de retrouver le dernier espace?

Composer: c'est la vie!
Packagist.org pour installer composer!

            APRÈS:
            ======
1. Avancées de l’étudiant sur son projet depuis la dernière session:

bootstrap ajouté pour le design
controlleurs splités mais pas encore en objet

2. Principaux sujets abordés pendant la session, obstacles à surmonter (le cas échéant), et actions nécessaires pour atteindre ces objectifs

check de l'avancement
attention aux fonctions php sur les string, utiliser "mb_" quand c'est possible

3. Objectifs 'SMARTIES' fixés par l'étudiant et le mentor pour la prochaine session

corriger les controlleurs : renommer, passer en objet
ajouter un dossier App dans lequel mettre controlleurs et model pour l'autoload
possibilité d'ajouter un fichier .gitignore pour éviter d'avoir des fichiers locaux sur le github (.idea par exemple)
voir comment fonctionne composer